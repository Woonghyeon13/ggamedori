<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="game.dori.mapper.productMapper">

	<!-- 상품 등록 -->
	<insert id="prodInsert" parameterType="productVO">
		INSERT INTO 
		product_tb (category_tb_code, prod_name, prod_price, prod_stock, prod_co, prod_rdate, prod_reserv, prod_imgt, prod_imgm, prod_imgd, prod_qtymin, prod_qtymax) 
		VALUES (#{category_tb_code}, #{prod_name}, #{prod_price}, #{prod_stock}, #{prod_co}, #{prod_rdate}, #{prod_reserv}, #{prod_imgt}, #{prod_imgm}, #{prod_imgd}, #{prod_qtymin}, #{prod_qtymax});
	</insert>
	
<!-- 상품 리스트 -->
<select id="prodSelectAll" resultType="productVO" parameterType="categoryVO">
		SELECT * FROM product_tb p, category_tb c where p.category_tb_code = c.cate_code
		<choose>
			<when test="cate_refcode != null">
				and cate_refcode = #{cate_refcode} order by p.prod_idx desc
			</when>
			<when test='cate_rsv != null'>
				and prod_reserv = #{cate_rsv} order by p.prod_idx desc
			</when>
			<when test='cate_refcode == null and cate_code != null'>
				and category_tb_code = #{cate_code} order by p.prod_idx desc
			</when>
			<when test= 'cate_new != null'>
				order by p.prod_idx desc limit 50
			</when>
			<otherwise>
				order by p.prod_idx desc
			</otherwise>
		</choose>
	</select>


	<!-- 상품리스트 카운트 -->
	<select id="listCnt" resultType="int" parameterType="categoryVO">
		SELECT count(*) FROM product_tb p, category_tb c where p.category_tb_code = c.cate_code
		<if test="cate_refcode != null">
			and cate_refcode = #{cate_refcode}
		</if>
		<if test='cate_rsv != null'>
			and prod_reserv = #{cate_rsv}
		</if>
		<if test='cate_refcode == null and cate_code != null'>
			and category_tb_code = #{cate_code}
		</if>
	</select>
	
	<!-- 상품 수정 -->
	<update id="prodUpdate" parameterType="productVO">
		update product_tb
		set
		 category_tb_code  = #{category_tb_code}
		, prod_name = #{prod_name}
		, prod_price = #{prod_price}
		, prod_stock = #{prod_stock}
		, prod_co = #{prod_co}
		, prod_rdate = #{prod_rdate}
		, prod_reserv = #{prod_reserv}
		, prod_imgt = #{prod_imgt}
		, prod_imgm = #{prod_imgm}
		, prod_imgd = #{prod_imgd}
		, prod_qtymin = #{prod_qtymin}
		, prod_qtymax = #{prod_qtymax}
		where prod_idx = #{prod_idx}
	</update>
	
	<!-- 상품 삭제 -->
	<delete id="prodDelete" parameterType="int">
		delete from product_tb where prod_idx = #{prod_idx}
	</delete>
	
	<!-- 상품 상세 -->
	<select id="prodSelectOne" resultType="productVO" parameterType="productVO">
		select * from product_tb where prod_idx = #{prod_idx}
	</select>
	
	<!-- 예약상품 리스트 -->
	<select id="reservlist" resultType="productVO">
		select *
			from product_tb where prod_reserv = "1"
		order by prod_idx desc
	</select>
	<!--  상품 정렬 : 최신순(new)   -->
	<select id="prodSelect_new" resultType="productVO" parameterType="categoryVO">
		SELECT * FROM product_tb p, category_tb c 
		where p.category_tb_code = c.cate_code 
		
		<choose>
			<when test="cate_refcode != null">
				and cate_refcode = #{cate_refcode} order by p.prod_idx desc
			</when>
			<when test='cate_rsv != null'>
				and prod_reserv = #{cate_rsv} order by p.prod_idx desc
			</when>
			<when test='cate_refcode == null and cate_code != null'>
				and category_tb_code = #{cate_code} order by p.prod_idx desc
			</when>
			<when test= 'cate_new != null'>
				order by p.prod_idx desc limit 50
			</when>
			<otherwise>
				order by p.prod_wdate desc;
			</otherwise>
		</choose>
	</select>
	
	<!--  상품 정렬 : 낮은가격순(row) 오름차순   -->
	<select id="prodSelect_row" resultType="productVO" parameterType="categoryVO">
		SELECT * FROM product_tb p, category_tb c 
		where p.category_tb_code = c.cate_code 
		
		<choose>
			<when test="cate_refcode != null">
				and cate_refcode = #{cate_refcode} order by p.prod_idx desc
			</when>
			<when test='cate_rsv != null'>
				and prod_reserv = #{cate_rsv} order by p.prod_idx desc
			</when>
			<when test='cate_refcode == null and cate_code != null'>
				and category_tb_code = #{cate_code} order by p.prod_idx desc
			</when>
			<when test= 'cate_new != null'>
				order by p.prod_idx desc limit 50
			</when>
			<otherwise>
				order by p.prod_price ASC;
			</otherwise>
		</choose>	
	</select>
	
	<!--  상품 정렬 : 높은가격순(high)  -->
	<select id="prodSelect_high" resultType="productVO" parameterType="categoryVO">
		SELECT * FROM product_tb p, category_tb c 
		where p.category_tb_code = c.cate_code 
		
		<choose>
			<when test="cate_refcode != null">
				and cate_refcode = #{cate_refcode} order by p.prod_idx desc
			</when>
			<when test='cate_rsv != null'>
				and prod_reserv = #{cate_rsv} order by p.prod_idx desc
			</when>
			<when test='cate_refcode == null and cate_code != null'>
				and category_tb_code = #{cate_code} order by p.prod_idx desc
			</when>
			<when test= 'cate_new != null'>
				order by p.prod_idx desc limit 50
			</when>
			<otherwise>
				order by p.prod_price desc;
			</otherwise>
		</choose>
	</select>
	
	<!--  상품 정렬 : 인기순(hot)   -->
	<select id="prodSelect_hot" resultType="productVO" parameterType="categoryVO">
		SELECT * FROM product_tb p, category_tb c where p.category_tb_code = c.cate_code
		
	<choose>
		<when test="cate_refcode != null">
			and cate_refcode = #{cate_refcode} order by p.prod_idx desc
		</when>
		<when test='cate_rsv != null'>
			and prod_reserv = #{cate_rsv} order by p.prod_idx desc
		</when>
		<when test='cate_refcode == null and cate_code != null'>
			and category_tb_code = #{cate_code} order by p.prod_idx desc
		</when>
		<when test= 'cate_new != null'>
			order by p.prod_idx desc limit 50
		</when>
		<otherwise>
			order by p.prod_hit desc;
		</otherwise>
	</choose>
	</select>
	
	
	
	<!-- 상품문의 상품명찾기 -->
	<select id="prod_name" parameterType="int" resultType="productVO">
		SELECT * FROM product_tb
			WHERE prod_idx = #{prod_idx}
	</select>
	
	<!-- 상품 재고감소 -->
	<update id="prodStockMinus" parameterType="prodoptVO">
		update product_tb
			set  prod_stock = prod_stock - #{prod_stock}
			where prod_idx = #{prod_idx}
	</update>
</mapper>