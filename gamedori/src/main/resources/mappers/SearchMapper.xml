<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="game.dori.mapper.searchMapper">

	<!-- 페이징 처리를 위한 member_tb값을 얻기 위한 쿼리문 -->
	<select id="mCountAll" resultType="int">
    	SELECT COUNT(*) FROM member_tb where member_role = "1"
	</select>

	<!-- 멤버 검색 -->
	<select id="mSearch" resultType="memberVO" parameterType="map">
	  SELECT * FROM member_tb WHERE member_role = "1" AND
	  <choose>
	    <when test="searchOption == 'name'">
	      member_name like CONCAT('%', #{searchText}, '%')
	    </when>
	    <when test="searchOption == 'email'">
	      member_email LIKE CONCAT('%', #{searchText}, '%')
	    </when>
	    <when test="searchOption == 'mLevel'">
	      member_level LIKE CONCAT('%', #{searchText}, '%')
	    </when>
	    <when test="searchOption == 'mState'">
	      member_state LIKE CONCAT('%', #{searchText}, '%')
	    </when>
	  </choose>
	  ORDER BY member_idx DESC
	  LIMIT #{start}, #{limit}
	</select>
	
	<!-- 검색된 결과 페이징 처리할때 사용(관리자페이지 멤버리스트) -->
	<select id="mCountSearchResults" resultType="int" parameterType="map">
	  SELECT COUNT(*) FROM member_tb WHERE member_role = "1" AND
	  <choose>
	    <when test="searchOption == 'name'">
	      member_name like CONCAT('%', #{searchText}, '%')
	    </when>
	    <when test="searchOption == 'email'">
	      member_email LIKE CONCAT('%', #{searchText}, '%')
	    </when>
	    <when test="searchOption == 'mLevel'">
	      member_level LIKE CONCAT('%', #{searchText}, '%')
	    </when>
	    <when test="searchOption == 'mState'">
	      member_state LIKE CONCAT('%', #{searchText}, '%')
	    </when>
	  </choose>
	</select>
	
	<!-- 멤버리스트 관련 끝 -->
	
	
	<!-- 1 : 1 문의사항 페이징 처리를 위한 QA_TB -->
	<select id="oto_countAll" resultType="int">
		SELECT COUNT(*) FROM QA_TB
	</select>
	
	<!-- 1 : 1 문의사항 글 검색 -->
	<select id="oto_search" resultType="qaVO" parameterType="map">
		SELECT * FROM QA_TB
		<where>
		  <choose>
		    <when test="searchOption == 'name'">
		      <if test="searchText != null and searchText != ''">
		        and QA_WRITER like CONCAT('%', #{searchText}, '%')
		      </if>
		    </when>
			<when test="searchOption == 'title'">
			  <if test="searchText != null and searchText != ''">
			    AND qa_title LIKE CONCAT('%', #{searchText}, '%')
			  </if>
			</when>
			<when test="searchOption == 'content'">
			  <if test="searchText != null and searchText != ''">
			    AND qa_contents LIKE CONCAT('%', #{searchText}, '%')
			  </if>
			</when>
		    <otherwise>
		      <if test="searchText != null and searchText != ''">
		        AND (qa_writer LIKE CONCAT('%', #{searchText}, '%') OR qa_title LIKE CONCAT('%', #{searchText}, '%') OR qa_contents LIKE CONCAT('%', #{searchText}, '%'))
		      </if>
		    </otherwise>
		  </choose>
		</where>
		ORDER BY qa_idx DESC
		LIMIT #{start}, #{limit}
	</select>
	
	
	<!--  1 : 1 문의사항 검색된 쿼리의 갯수도 얻어오기위해 사용 -->
	<select id="oto_countSearchResults" resultType="int" parameterType="map">
		 SELECT COUNT(*) FROM QA_TB
		 <where>
		   <choose>
		     <when test="searchOption == 'name'">
		       <if test="searchText != null and searchText != ''">
		         qa_title like CONCAT('%', #{searchText}, '%')
		       </if>
		     </when>
		     <when test="searchOption == 'content'">
		       <if test="searchText != null and searchText != ''">
		         qa_contents LIKE CONCAT('%', #{searchText}, '%')
		       </if>
		     </when>
		     <otherwise>
		       <if test="searchText != null and searchText != ''">
		         (qa_writer LIKE CONCAT('%', #{searchText}, '%') OR qa_title LIKE CONCAT('%', #{searchText}, '%') OR qa_contents LIKE CONCAT('%', #{searchText}, '%'))
		       </if>
		     </otherwise>
		   </choose>
		 </where>
	</select>

	
	<!-- 페이징 처리를 위한 notice_board의 게시물 수값을 얻기위한 쿼리문 -->
	<select id="notice_countAll" resultType="int">
    	SELECT COUNT(*) FROM notice_tb
	</select>
	
 	<!-- 공지사항 검색 -->
	<select id="notice_search" resultType="noticeVO" parameterType="map">
	  SELECT * FROM notice_tb
	  <where>
	    <choose>
	      <when test="searchOption == 'name'">
	        <if test="searchText != null and searchText != ''">
	          notice_title like CONCAT('%', #{searchText}, '%')
	        </if>
	      </when>
	      <when test="searchOption == 'content'">
	        <if test="searchText != null and searchText != ''">
	          notice_contents LIKE CONCAT('%', #{searchText}, '%')
	        </if>
	      </when>
	      <otherwise>
	        <if test="searchText != null and searchText != ''">
	          notice_title LIKE CONCAT('%', #{searchText}, '%') OR notice_contents LIKE CONCAT('%', #{searchText}, '%')
	        </if>
	      </otherwise>
	    </choose>
	  </where>
	  ORDER BY notice_idx DESC
	  LIMIT #{start}, #{limit}
	</select>

	
	<!-- 검색된 쿼리의 갯수도 얻어오기위해 사용 -->
<select id="notice_countSearchResults" resultType="int" parameterType="map">
  SELECT COUNT(*) FROM notice_tb
  <where>
    <choose>
      <when test="searchOption == 'name'">
        <if test="searchText != null and searchText != ''">
          notice_title like CONCAT('%', #{searchText}, '%')
        </if>
      </when>
      <when test="searchOption == 'content'">
        <if test="searchText != null and searchText != ''">
          notice_contents LIKE CONCAT('%', #{searchText}, '%')
        </if>
      </when>
      <otherwise>
        <if test="searchText != null and searchText != ''">
          notice_writer LIKE CONCAT('%', #{searchText}, '%') OR notice_title LIKE CONCAT('%', #{searchText}, '%') OR notice_contents LIKE CONCAT('%', #{searchText}, '%')
        </if>
      </otherwise>
    </choose>
  </where>
</select>
	
	<!-- ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->	
	
	<!-- 상품 문의사항 페이징 처리를 위한 QA_TB -->
	<select id="prodq_countAll" resultType="int">
		SELECT COUNT(*) FROM 
				product_q_tb q,
				member_tb m
			where
				q.member_tb_idx = m.member_idx 
	</select>
	
	<!-- 상품 문의사항 글 검색 -->
	<select id="prodq_search" resultType="product_q_VO" parameterType="map">
		SELECT * FROM
					product_q_tb q,
					member_tb m
				where
					q.member_tb_idx = m.member_idx 
		<where>
		  <choose>
		    <when test="searchOption == 'name'">
		      <if test="searchText != null and searchText != ''">
		        and member_name like CONCAT('%', #{searchText}, '%')
		      </if>
		    </when>
			<when test="searchOption == 'title'">
			  <if test="searchText != null and searchText != ''">
			    AND prod_q_title LIKE CONCAT('%', #{searchText}, '%')
			  </if>
			</when>
			<when test="searchOption == 'content'">
			  <if test="searchText != null and searchText != ''">
			    AND prod_q_contents LIKE CONCAT('%', #{searchText}, '%')
			  </if>
			</when>
		    <otherwise>
		      <if test="searchText != null and searchText != ''">
		        AND (member_name LIKE CONCAT('%', #{searchText}, '%') OR prod_q_title LIKE CONCAT('%', #{searchText}, '%') OR prod_q_contents LIKE CONCAT('%', #{searchText}, '%'))
		      </if>
		    </otherwise>
		  </choose>
		</where>
		ORDER BY prod_q_idx DESC
		LIMIT #{start}, #{limit}
	</select>
	
	
	<!--  상품 문의사항 검색된 쿼리의 갯수도 얻어오기위해 사용 -->
	<select id="prodq_countSearchResults" resultType="int" parameterType="map">
		 SELECT COUNT(*) FROM
			 			product_q_tb q,
						member_tb m
					where
						q.member_tb_idx = m.member_idx 
		 <where>
		   <choose>
		     <when test="searchOption == 'name'">
		       <if test="searchText != null and searchText != ''">
		         member_name like CONCAT('%', #{searchText}, '%')
		       </if>
		     </when>
		     <when test="searchOption == 'title'">
			  <if test="searchText != null and searchText != ''">
			    prod_q_title LIKE CONCAT('%', #{searchText}, '%')
			  </if>
			 </when>
		     <when test="searchOption == 'content'">
		       <if test="searchText != null and searchText != ''">
		         prod_q_contents LIKE CONCAT('%', #{searchText}, '%')
		       </if>
		     </when>
		     <otherwise>
		       <if test="searchText != null and searchText != ''">
		         (member_name LIKE CONCAT('%', #{searchText}, '%') OR prod_q_title LIKE CONCAT('%', #{searchText}, '%') OR prod_q_contents LIKE CONCAT('%', #{searchText}, '%'))
		       </if>
		     </otherwise>
		   </choose>
		 </where>
	</select>
	
	
	
	<!-- ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->
	
<!-- 상품문의 검색 -->
<select id="qrod_search" resultType="pqlistVO" parameterType="map">
  SELECT
    *
  FROM
    product_q_tb pq,
    member_tb m,
    product_tb p
  <where>
    <choose>
      <when test="searchOption == 'title'">
        <if test="searchText != null and searchText != ''">
          AND pq.prod_q_title LIKE CONCAT('%', #{searchText}, '%')
        </if>
      </when>
      <when test="searchOption == 'writer'">
        <if test="searchText != null and searchText != ''">
          AND m.member_name LIKE CONCAT('%', #{searchText}, '%')
        </if>
      </when>
      <otherwise>
        <if test="searchText != null and searchText != ''">
          AND (pq.prod_q_title LIKE CONCAT('%', #{searchText}, '%') OR m.member_name LIKE CONCAT('%', #{searchText}, '%'))
        </if>
      </otherwise>
    </choose>
    AND pq.product_tb_idx = p.prod_idx
    AND pq.member_tb_idx = m.member_idx
  </where>
  ORDER BY pq.prod_q_idx DESC
  LIMIT #{start}, #{limit}
</select>

	<select id="qrod_countSearchResults" resultType="int" parameterType="map">
		  SELECT COUNT(*) FROM product_q_tb pq
		  <where>
		    <choose>
		      <when test="searchOption == 'title'">
		        <if test="searchText != null and searchText != ''">
		          prod_q_title like CONCAT('%', #{searchText}, '%')
		        </if>
		      </when>
		      <when test="searchOption == 'writer'">
		        prod_q_title like CONCAT('%', #{searchText}, '%')
		      </when>
		     
		    </choose>
		    </where>
		</select>


<!-- 상품관리 검색 -->
<select id="prod_search" resultType="productVO" parameterType="map">
 
	  SELECT *
		FROM product_tb	 
		
		<where>
	    <choose>
	      <when test="searchOption == 'name'">
	        <if test="searchText != null and searchText != ''">
	          and PROD_NAME like CONCAT('%', #{searchText}, '%')
	        </if>
	      </when>
	      <when test="searchOption == 'idx'">
	        <if test="searchText != null and searchText != ''">
	          AND PROD_IDX LIKE CONCAT('%', #{searchText}, '%')
	        </if>
	      </when>
	    </choose>
	  </where>
	  ORDER BY PROD_IDX DESC
	  LIMIT #{start}, #{limit}
</select>

<select id="prod_countSearchResults" resultType="int" parameterType="map">
	 SELECT COUNT(*) FROM product_tb 
	  <where>
	    <choose>
	      <when test="searchOption == 'name'">
	        <if test="searchText != null and searchText != ''">
	          PROD_NAME like CONCAT('%', #{searchText}, '%')
	        </if>
	      </when>
	     
	    </choose>
	    </where>
</select>



<!--  오더리스트 검색기능 -->
<select id="orderlist_search" resultType="orderlistVO" parameterType="map">
  SELECT o.*, od.*, m.* 
  FROM 
    order_tb o, 
    order_detail_tb od,
    member_tb m
  <where>
    o.order_idx = od.order_tb_idx
    AND o.member_tb_idx = m.member_idx
    <choose>
      <when test="searchOption == 'name'">
        <if test="searchText != null and searchText != ''">
          AND m.member_name LIKE CONCAT('%', #{searchText}, '%')
        </if>
      </when>
      <when test="searchOption == 'idx'">
        <if test="searchText != null and searchText != ''">
          AND o.order_idx LIKE CONCAT('%', #{searchText}, '%')
        </if>
      </when>
      <otherwise>
        <if test="searchText != null and searchText != ''">
          AND (m.member_name LIKE CONCAT('%', #{searchText}, '%') OR o.order_idx LIKE CONCAT('%', #{searchText}, '%'))
        </if>
      </otherwise>
    </choose>
  </where>
  ORDER BY o.order_idx DESC
  LIMIT #{start}, #{limit}
</select>

<select id="orderlist_countSearchResults" resultType="int" parameterType="map">
   SELECT COUNT(*)
		FROM order_tb o, member_tb m
		WHERE o.member_tb_idx = m.member_idx
		AND o.order_idx LIKE CONCAT('%', #{searchText}, '%')
</select>

<!--  상품 검색 -->
	<select id="prodect_search" resultType="productVO" parameterType="map">
	  SELECT * FROM product_tb
	  <where>
	    <choose>
	      <when test="searchOption == 'name'">
	        <if test="searchText != null and searchText != ''">
	          PROD_NAME like CONCAT('%', #{searchText}, '%')
	        </if>
	      </when>
	    </choose>
	  </where>
	  ORDER BY PROD_WDATE DESC
	  LIMIT #{start}, #{limit}
	</select>

	
<!-- 검색된 쿼리의 갯수도 얻어오기위해 사용 -->
<select id="prodect_countSearchResults" resultType="int" parameterType="map">
  SELECT COUNT(*) FROM product_tb
  <where>
    <choose>
      <when test="searchhOption == 'name'">
        <if test="searchhText != null and searchText != ''">
          PROD_NAME like CONCAT('%', #{searchText}, '%')
        </if>
      </when>
    </choose>
  </where>
</select>
</mapper>